<?xml version="1.0" encoding="utf-8"?>
<Octopus>
  <ColorProperties>
    <MouseOver A="255" R="76" G="153" B="253" />
    <IconProperties IconHueShift="210" IconSaturation="1" />
  </ColorProperties>
  <ShapeProperties roundness="5" width="100" height="24" />
  <LayoutProperties xPosMod="1" yPosMod="2" radiusMod="125" CRMod="0" />
  <OctopusTemplate>
    <OctopusProperties isActive="True" previewMode="False" leftIcon="Polygon.png" rightIcon="None" iconOnly="False" buttonText="To Poly">
      <ActionData active="True" type="0">
        <Command>macros.run "Modifier Stack" "Convert_to_Poly"</Command>
        <CommandPre></CommandPre>
        <CommandPost></CommandPost>
        <XIntensity>1</XIntensity>
        <YIntensity>1</YIntensity>
        <XStepping>1</XStepping>
        <YStepping>1</YStepping>
        <isXAdaptive>False</isXAdaptive>
        <isYAdaptive>False</isYAdaptive>
      </ActionData>
      <ActionData active="False" type="1">
        <Command></Command>
        <CommandPre></CommandPre>
        <CommandPost></CommandPost>
        <XIntensity>1</XIntensity>
        <YIntensity>1</YIntensity>
        <XStepping>1</XStepping>
        <YStepping>1</YStepping>
        <isXAdaptive>False</isXAdaptive>
        <isYAdaptive>False</isYAdaptive>
      </ActionData>
    </OctopusProperties>
    <OctopusProperties isActive="True" previewMode="False" leftIcon="plane.png" rightIcon="None" iconOnly="False" buttonText="Plane">
      <ActionData active="True" type="0">
        <Command>Plane()
RedrawViews()</Command>
        <CommandPre></CommandPre>
        <CommandPost></CommandPost>
        <XIntensity>1</XIntensity>
        <YIntensity>1</YIntensity>
        <XStepping>1</XStepping>
        <YStepping>1</YStepping>
        <isXAdaptive>False</isXAdaptive>
        <isYAdaptive>False</isYAdaptive>
      </ActionData>
      <ActionData active="True" type="1">
        <Command>planes[1].length = {1}
planes[1].width = {0}
if {0} &gt; {1} then (
	rate = {0} / {1}
	planes[1].lengthsegs = {2}
	planes[1].widthsegs = {2} * rate
) else (
	rate = {1} / {0}
	planes[1].lengthsegs = {2} * rate
	planes[1].widthsegs = {2}
)
redrawViews()</Command>
        <CommandPre>fs = polyop.getFaceSelection $ as array

planes = #()

p = Plane()
p.pos = polyop.getFaceCenter $ fs[1]
p.dir = polyop.getFaceNormal $ fs[1]
append planes p

p.wirecolor = color 255 127 0

for i = 2 to fs.count do (
	pInst = instance p
	pInst.wirecolor = color 255 127 0
	append planes pInst
	pInst.pos = polyop.getFaceCenter $ fs[i]
	pInst.dir = polyop.getFaceNormal $ fs[i]
)
</CommandPre>
        <CommandPost></CommandPost>
        <XIntensity>1</XIntensity>
        <YIntensity>1</YIntensity>
        <XStepping>1</XStepping>
        <YStepping>1</YStepping>
        <isXAdaptive>True</isXAdaptive>
        <isYAdaptive>True</isYAdaptive>
      </ActionData>
    </OctopusProperties>
    <OctopusProperties isActive="True" previewMode="False" leftIcon="torus.png" rightIcon="None" iconOnly="False" buttonText="Torus">
      <ActionData active="True" type="0">
        <Command>Torus()
RedrawViews()</Command>
        <CommandPre></CommandPre>
        <CommandPost></CommandPost>
        <XIntensity>1</XIntensity>
        <YIntensity>1</YIntensity>
        <XStepping>1</XStepping>
        <YStepping>1</YStepping>
        <isXAdaptive>False</isXAdaptive>
        <isYAdaptive>False</isYAdaptive>
      </ActionData>
      <ActionData active="True" type="1">
        <Command>toruses[1].segs = ({2} * 2)
toruses[1].sides = {2}
toruses[1].radius1 = {0}
toruses[1].radius2 = {1}
toruses[1].wirecolor = color 255 127 0
RedrawViews()</Command>
        <CommandPre>fs = polyop.getFaceSelection $ as array

toruses = #()

t = Torus()
t.pos = polyop.getFaceCenter $ fs[1]
t.dir = polyop.getFaceNormal $ fs[1]
append toruses t

t.wirecolor = color 255 127 0

for i = 2 to fs.count do (
	tInst = instance t
	tInst.wirecolor = color 255 127 0
	append toruses tInst
	tInst.pos = polyop.getFaceCenter $ fs[i]
	tInst.dir = polyop.getFaceNormal $ fs[i]
)
</CommandPre>
        <CommandPost></CommandPost>
        <XIntensity>1</XIntensity>
        <YIntensity>1</YIntensity>
        <XStepping>1</XStepping>
        <YStepping>1</YStepping>
        <isXAdaptive>True</isXAdaptive>
        <isYAdaptive>True</isYAdaptive>
      </ActionData>
    </OctopusProperties>
    <OctopusProperties isActive="True" previewMode="False" leftIcon="sphere.png" rightIcon="None" iconOnly="False" buttonText="Sphere">
      <ActionData active="True" type="0">
        <Command>Sphere()
RedrawViews()</Command>
        <CommandPre></CommandPre>
        <CommandPost></CommandPost>
        <XIntensity>1</XIntensity>
        <YIntensity>1</YIntensity>
        <XStepping>1</XStepping>
        <YStepping>1</YStepping>
        <isXAdaptive>False</isXAdaptive>
        <isYAdaptive>False</isYAdaptive>
      </ActionData>
      <ActionData active="True" type="1">
        <Command>spheres[1].segments= {2}
spheres[1].radius= {0}
spheres[1].wirecolor = color 255 127 0
RedrawViews()</Command>
        <CommandPre>fs = polyop.getFaceSelection $ as array

spheres = #()

s = Sphere()
s.pos = polyop.getFaceCenter $ fs[1]
s.dir = polyop.getFaceNormal $ fs[1]
append spheres s

s.wirecolor = color 255 127 0

for i = 2 to fs.count do (
	sInst = instance s
	sInst.wirecolor = color 255 127 0
	append spheres sInst
	sInst.pos = polyop.getFaceCenter $ fs[i]
	sInst.dir = polyop.getFaceNormal $ fs[i]
)
</CommandPre>
        <CommandPost></CommandPost>
        <XIntensity>1</XIntensity>
        <YIntensity>1</YIntensity>
        <XStepping>1</XStepping>
        <YStepping>1</YStepping>
        <isXAdaptive>True</isXAdaptive>
        <isYAdaptive>True</isYAdaptive>
      </ActionData>
    </OctopusProperties>
    <OctopusProperties isActive="True" previewMode="False" leftIcon="TriMesh.png" rightIcon="None" iconOnly="False" buttonText="To Mesh">
      <ActionData active="True" type="0">
        <Command>macros.run "Modifier Stack" "Convert_to_Mesh"</Command>
        <CommandPre></CommandPre>
        <CommandPost></CommandPost>
        <XIntensity>1</XIntensity>
        <YIntensity>1</YIntensity>
        <XStepping>1</XStepping>
        <YStepping>1</YStepping>
        <isXAdaptive>False</isXAdaptive>
        <isYAdaptive>False</isYAdaptive>
      </ActionData>
      <ActionData active="False" type="1">
        <Command></Command>
        <CommandPre></CommandPre>
        <CommandPost></CommandPost>
        <XIntensity>1</XIntensity>
        <YIntensity>1</YIntensity>
        <XStepping>1</XStepping>
        <YStepping>1</YStepping>
        <isXAdaptive>False</isXAdaptive>
        <isYAdaptive>False</isYAdaptive>
      </ActionData>
    </OctopusProperties>
    <OctopusProperties isActive="True" previewMode="False" leftIcon="box.png" rightIcon="None" iconOnly="False" buttonText="Box">
      <ActionData active="True" type="0">
        <Command>Box()
RedrawViews()</Command>
        <CommandPre></CommandPre>
        <CommandPost></CommandPost>
        <XIntensity>1</XIntensity>
        <YIntensity>1</YIntensity>
        <XStepping>1</XStepping>
        <YStepping>1</YStepping>
        <isXAdaptive>False</isXAdaptive>
        <isYAdaptive>False</isYAdaptive>
      </ActionData>
      <ActionData active="True" type="1">
        <Command>boxes[1].heightsegs = {2}
boxes[1].height = {1}
boxes[1].length= {0}
boxes[1].width = {0}
boxes[1].wirecolor = color 255 127 0
RedrawViews()</Command>
        <CommandPre>fs = polyop.getFaceSelection $ as array

boxes = #()

b = Box()
b.pos = polyop.getFaceCenter $ fs[1]
b.dir = polyop.getFaceNormal $ fs[1]
append boxes b

b.wirecolor = color 255 127 0

for i = 2 to fs.count do (
	bInst = instance b
	bInst.wirecolor = color 255 127 0
	append boxes bInst
	bInst.pos = polyop.getFaceCenter $ fs[i]
	bInst.dir = polyop.getFaceNormal $ fs[i]
)
</CommandPre>
        <CommandPost></CommandPost>
        <XIntensity>1</XIntensity>
        <YIntensity>1</YIntensity>
        <XStepping>1</XStepping>
        <YStepping>1</YStepping>
        <isXAdaptive>True</isXAdaptive>
        <isYAdaptive>True</isYAdaptive>
      </ActionData>
    </OctopusProperties>
    <OctopusProperties isActive="True" previewMode="False" leftIcon="tube.png" rightIcon="None" iconOnly="False" buttonText="Tube">
      <ActionData active="True" type="0">
        <Command>Tube()
RedrawViews()</Command>
        <CommandPre></CommandPre>
        <CommandPost></CommandPost>
        <XIntensity>1</XIntensity>
        <YIntensity>1</YIntensity>
        <XStepping>1</XStepping>
        <YStepping>1</YStepping>
        <isXAdaptive>False</isXAdaptive>
        <isYAdaptive>False</isYAdaptive>
      </ActionData>
      <ActionData active="True" type="1">
        <Command>tubes[1].heightsegs = {2}
tubes[1].height = {1}
tubes[1].radius1 = {0}
tubes[1].radius2 = {0} * 1.25
tubes[1].wirecolor = color 255 127 0
RedrawViews()</Command>
        <CommandPre>fs = polyop.getFaceSelection $ as array

tubes = #()

t = Tube()
t.pos = polyop.getFaceCenter $ fs[1]
t.dir = polyop.getFaceNormal $ fs[1]
append tubes  t

t.wirecolor = color 255 127 0

for i = 2 to fs.count do (
	tInst = instance t
	tInst.wirecolor = color 255 127 0
	append tubes tInst
	tInst.pos = polyop.getFaceCenter $ fs[i]
	tInst.dir = polyop.getFaceNormal $ fs[i]
)
</CommandPre>
        <CommandPost></CommandPost>
        <XIntensity>1</XIntensity>
        <YIntensity>1</YIntensity>
        <XStepping>1</XStepping>
        <YStepping>1</YStepping>
        <isXAdaptive>True</isXAdaptive>
        <isYAdaptive>True</isYAdaptive>
      </ActionData>
    </OctopusProperties>
    <OctopusProperties isActive="True" previewMode="False" leftIcon="cylinder.png" rightIcon="None" iconOnly="False" buttonText="Cylinder">
      <ActionData active="True" type="0">
        <Command>Cylinder()
RedrawViews()</Command>
        <CommandPre></CommandPre>
        <CommandPost></CommandPost>
        <XIntensity>1</XIntensity>
        <YIntensity>1</YIntensity>
        <XStepping>1</XStepping>
        <YStepping>1</YStepping>
        <isXAdaptive>False</isXAdaptive>
        <isYAdaptive>False</isYAdaptive>
      </ActionData>
      <ActionData active="True" type="1">
        <Command>cyls[1].heightsegs = {2}
cyls[1].height = {1}
cyls[1].radius = {0}
cyls[1].wirecolor = color 255 127 0
RedrawViews()</Command>
        <CommandPre>fs = polyop.getFaceSelection $ as array

cyls = #()

c = Cylinder()
c.pos = polyop.getFaceCenter $ fs[1]
c.dir = polyop.getFaceNormal $ fs[1]
append cyls c

c.wirecolor = color 255 127 0

for i = 2 to fs.count do (
	cInst = instance c
	cInst.wirecolor = color 255 127 0
	append cyls cInst
	cInst.pos = polyop.getFaceCenter $ fs[i]
	cInst.dir = polyop.getFaceNormal $ fs[i]
)
</CommandPre>
        <CommandPost></CommandPost>
        <XIntensity>1</XIntensity>
        <YIntensity>1</YIntensity>
        <XStepping>1</XStepping>
        <YStepping>1</YStepping>
        <isXAdaptive>True</isXAdaptive>
        <isYAdaptive>True</isYAdaptive>
      </ActionData>
    </OctopusProperties>
  </OctopusTemplate>
  <OctopusIcons>
    <OctopusIcon leftIconName="Polygon.png">
      <leftIcon>iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAIGNIUk0AAHolAACAgwAA+f8AAIDp
AAB1MAAA6mAAADqYAAAXb5JfxUYAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAApSURBVDhPY/jPwPCf
EgwzAESTg6EGAI0gC48aMGoACI8agGQA2ZjhPwBJ3aV3/aX/tQAAAABJRU5ErkJgggAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</leftIcon>
    </OctopusIcon>
    <OctopusIcon leftIconName="plane.png">
      <leftIcon>iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAUhJREFU
OE/lkcsrhFEYxn+R5NIUC1YTWSAsZGHBgpKdDWkizVJhxUrJwo4tkoVEU7JRhqFhXMLIJUZNLomR
KWt/gFw+z+c7Y4OwU576dc75zvu85/3el3+gAkgtgnRz/JlyIake8nuhcxyCo+BvgvJMc/+pUkQN
5PSAR6aZOYgH4HkZrEUxCzf90F0J2Y7DqAzSOuQdgaF5iK7Dw6YMGwadrZBhRQknIdAKFcnGjwdK
l+B4XwF7hsR+17AjtsWWsJMuQEzVtOtxpzeqoGoVIie6jAh7tTkSh4YDkUgcFmtw3wfetwS2WqAw
CKFzXdqciVMRNSSSqpI7H0x3QW2xJmTsjhrBrfKmruDpWsFarUtxAS96PTYBA21Q4ob3FnxQNbj8
MHYLj3E1VD0ID+svmyHPZWK+lUaVoal4B6GhDrLM59/p6xr/luAVekiBHiSMAT0AAAAASUVORK5C
YII=</leftIcon>
    </OctopusIcon>
    <OctopusIcon leftIconName="torus.png">
      <leftIcon>iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAhpJREFU
OE/NkktI1GEUxX//h+M8oskorcA0LQiyaCgTo4icFpYk6gyi0HNR0EQUJC0iIgprk2XRwh7YIigK
K1vkwpYJ1mRlZJaUSIaF6RBJEDUz3u6MEyS1aOmBA9/j3Hvud7/L1IadopHc/Qdmg2MDLN4LtScM
42SjbV86l55+sd40T+nZLj8sn6WalHwyNsKSBmhuh+Fu04y9y8iQoaIiGaupkUhZmfTn5Iw/tO3I
BWjZDCXuPwvbBuV3oK8D5LGyyzDkqcslz3NzY72FhbEBTTSUnS1DDoe81nvVjmyFkAUmq2FOK7xI
BLco1WH0ENzaDvsCUFWtDMGeRrj6AAZ7VPNI2aRJfFCMXm56CT8SzvXwfin4XRO9mwSnllwCy65B
uFO1t5VqcJiDsGUQxj/qQRv018K6uf9IMEMT6NsXafnhhNldZRWcpRJWvIJI3LLkp9MpA07ncJtl
3TgP+48aRvCIYVSeNozdN6EpDL1vNbBLeRmiq6Caaep2BhpGLCsumZkiPp9IRYVIICDi98ejBQWx
71lZ8s3tloia9GnwPeUOaJ0OGcnyFupCv/DYm7S0z9G8PJFgUKSuTiQUEiktlWh+vox6PNJjmnId
xnbCFZ2HnGTwb8wEq1wHRRMdv2/bHWGP50O31/vlidv9td22PzXDswP65mJYrzOQngr7G4nuzQP3
Spi/VodrjXZef2aBNtZrTkimFOAX4ja6rY10BmkAAAAASUVORK5CYII=</leftIcon>
    </OctopusIcon>
    <OctopusIcon leftIconName="sphere.png">
      <leftIcon>iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAsRJREFU
OE+NUltI03EU/v6bbm46p+Ul0Rxb3tFpiNfopmn6kJc0CGGkBV5QI0dTJ2HkFklkvogSElKoBEVG
ZGURYcgeBgZWhIUE9dBD9hBUkPRw+nbpoRt04IM/v3O+75zznT/+FpsA3XYgvRIoPwBU7gRyTIAx
mP536ICQHUBtN3B/FFifBr7dBDZuAJ8mAG8r0E6h6GD5rxEBhFcAw/3A50uAzBGPVSrxhobKU8LL
7wXguxu4lQskBmmBUAOqPMDVwYILJM4Q99Rq8URFyYrJJKsZGfIyIcEv9IC5U8D0ViAySPfPVFrN
kR1McnSZVRS5q9eLh8TXjY3yvq1N1srKZCUuTpY4CRtsHASa/WQVoFiAcT5ILzFCTFFgzmCQxfx8
Wevulo9ut6w1NclySoo84RT0RfqAR7GAHmF01wosN/DRTpwlJigwq9PJndRU8dTUyLPmZvGWl8ti
YqIshITINdacAT6kA6nYDCQUAG/r+NhFnCZ8U0yycMZolDmzWeYzM2U+KUluh4fLdYpfZn4A+MLG
hYinwN6gwDEmHdzRRYwQ4zRySquVq/RjRqORK3ybDDZgs6+pQJHv79DvBzwNLLaxQ1dEhDhJGAoL
k2HuO0rSGIXHSPIZPEw4iUbgDT0InHOXogw0k3Q0OVnaLRax83TO+HgZ5BmH6IWL4txZBgnfpVoI
rj0dyh/PL5CmKNtaIiOfn8jKEkdJifQWF0tfbq6cpImO2FhxcCo7RTo5iY3kfTRwC7DHT/4ZuzWa
2h6LZX2I93ZVV8tgZaU4SkulJztbWjlNC1c6TAGuu5EGOH3nD1IDwXMq+wyGQ/0FBS8u1tfL+bo6
cVdVSW9RkXRwpSMUqFOUdznAcT2gDdL+jByj0WyzWp32wsKHjry81U6T6ZXNYFiqUKnO0XUrf/v/
ixi1WmtSqaLNanUM3dYF3Po9gB9A6xAXyscGOwAAAABJRU5ErkJggg==</leftIcon>
    </OctopusIcon>
    <OctopusIcon leftIconName="TriMesh.png">
      <leftIcon>iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAIGNIUk0AAHolAACAgwAA+f8AAIDp
AAB1MAAA6mAAADqYAAAXb5JfxUYAAAAJcEhZcwAACxIAAAsSAdLdfvwAAABoSURBVDhPpYzbDYBA
CMBYQeP+GxlHQvoh8bwXhx8NBNKKiugfngAzymacRirwli8mx2jgKx/sPCKBlsw9FOjJMA2MZBgG
ZjJ0AxEZmoGoDFVgRYYisBsrMnggI4MHMjJ4ICNDEUggegPHyV9wO7axWQAAAABJRU5ErkJgggAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</leftIcon>
    </OctopusIcon>
    <OctopusIcon leftIconName="box.png">
      <leftIcon>iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAkBJREFU
OE+Nk11Ik1EYx//vzpzuQ1y03JAxNXIb5hJbVH7gqOhGKyKv6kKorioNx3o3ttqsmaVQ9EUFXURI
UF1EN3oTdan0IXRTENRNF1F0EV0ZrdbTf+5QqGH94ceB95zfcx7OOS+WSxSwDwBNfcAq/enfKUkp
DpOA+R54KMCnIjB7H9jXCbj0soXxAdZBYONdIPUWeEzhM0VZxNx34MFFYD3bMbRazk5Wn6b0dan0
N959qKrKHFBqpdaBbcDB45x8unRxGcMQqagQCQREmptFgsHiTHV11q59bGUHg4ZRPMaFU4tFv18k
FhPp7RXp7pZCU5M8dzgkD4xZtI8Y0DNksRTiFosMKiUTHAs+n0hfn0h//7z8OhyWSc7dYeEJwttJ
ah3YDHTGDWMuQTFutcpRm00uc+fZ9naZ8njkNoVb5Ca5Qa6RvcB+rc9f3dqEUl9MymZlpSTsdknU
18u42y3Xufiqli6RK+Qc8GMXsEfrQDOw2lTqY4YF0iyQdDolFQrJKHe/QOG8ZlxzCvjGg9+udWAN
sGJIqSc5nnSWB5R2ueREMCjDLDBGocRpckaPab6JDmCT1svZolSHabO9yLHAMFvPt7ZKtq5ORijw
xOUkyZEMOQK8DAEBrf5Jl9W6LllTMzNaWyv5SEQyXq9kKZTeCHf9yZN/sxsYiQAtSjtL0uVwhE2P
59HZtjbJsAP+F8XDwKsdvLYWoPH33S+XDXa734xG7w00NDzrAQ6xXb9Vz/13gl6vs9HpdC/8axYH
+AXWqf0zJCWlEwAAAABJRU5ErkJggg==</leftIcon>
    </OctopusIcon>
    <OctopusIcon leftIconName="tube.png">
      <leftIcon>iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAwFJREFU
OE91U1lIVGEYPXNnGpvGfZtcZkrG1Mm1ZJqhstQU23ciklZj1LJ1yjazPUJI6DVoeeohCHrqISrq
IaigqJ5aICIqggoVTU1rTueOQmD0wWHucL9z/u+c+/0YW3mAfSkwcRtQdAgIHgECLUDBYiApGzBG
2/6taiDtAtDwNCHhVm9p6TtWVXXR7++n2/2DDsf3iGG8+ARcugasUK9zlDZSDYD/EfBg2On8xUmT
yLIysqSEEa+XP3Ny2JeZycH4eNJmI4HBfuDKRiA9Ss4H4m8D9/qAkQaHgxG7nUNxcRyQWG9hIb9M
ncrXbjefxsaSeieRyAfgRBJgQQAofgJ0S9V8wYjFwsGYGP5Qc58m6Jk+nV/Ly/k6N5eP09OjB9Aw
TNwpU17wAIWXgK6vJlkYErrV0K2Re/Ly2BUM8tusWfxcUEAmJ5PmFImJfGez3U0xBbIAz3qL5fNl
jf/eauVvTUD90ukks7NJn48sKiIDAbK6mpw9m10ZGWwFbkwwv4oLSK03jLe7EhLYJsLVrCw+TE3l
x7Q09ilA6nSuXMlIfT3fVFbyusjnNOU64KLNzEBjxK0zjGfhpCS2inBQng8I+4qLGdb/VgmFx4/n
ftnSXrBdOCwsAs5ZzK8QLx/1Vuv9Vvk7Kp/HZ8zgIWGfgmvJz2dIJzYruJ2ytVfEA8JuoRLQo8oB
WNcYxs3DKSk8WVrKU/LYXlHBIwpvpwSbtQMh5dEkAZMYFkL6jEFgS1TA3M1VVuv5dpeLZ7RApyVw
eu5cnpD3PbKxXbk0KfkmWWgWWSvOzcBwIbAkKmBWjWEsbc/I6O3Q6J3z5rFDaZ+USFjb2OLxMKSl
apRAk8hbheXA80zdl1G6bolsbHK52s4Hgz0XRO6sreXZqiq2KYcdkyezUTsRkoVGkdcCr8oB3a0x
NdFut631ehcemzPnemdd3YeOmpqB437/cDg3d6g5Obl3w7hxL5X8WR/gi6b/v/IkJtorcnLcy3y+
maunTFmwwO2eH4iNneY1jNSY0Z6/BfwBEAdOMYfWP4UAAAAASUVORK5CYII=</leftIcon>
    </OctopusIcon>
    <OctopusIcon leftIconName="cylinder.png">
      <leftIcon>iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAp1JREFU
OE99U0tIlGEUPf8/4uiMlo/mpWaizGiFjhm+0sn34GgQREpZixBzZtIkmdJ80pipGElCq2gRtGoR
baI2EVKLoEUL22VEQYokGj2oBPN2/nFC0PTAYX74vnPOvfe7g41IBJRDQFwjkOoF9p0FHMcBSxFg
iArf+S+yAWM/UP8EuDMDvFkCZn8DiwIskO9/AC+mgZFR4KAdiAjL1lAHZDwGHswDPykSCrbj53fA
aBUDQ2IzEHUPuL/Aw1+bL2/F5VeAP2SQBdhZ9vxXHvzZfHGdirJOnU77feTQWkkC9k8AXz7x0upW
IlVdE2lMSBBJTJQPERHPWH2kZrD7BDB3i4dvKVr5lxAZKWIwiMTHi2RmirjdIg0NIpWVsmKxSJAz
MwAqLICpSVVn2mNj5bLJJHeZ8NJolDmmLGdliVRXizQ3i/j9suTxyFOrVW4yqAm4zadQtHePpcHr
AJO609Oly+mUrpwc6aa4LyVFhmk0xEqCbGOAwkGyl6wHxhRtiDvYxymdbuoSkwcoulJQID1kIC9P
2li612YTf3S0dLCtTgq7yQtkOcBPIhrQNarqw14tielXS0tl0OWSvsJC6aChPylJvGzJRwNNGCBb
gVVuZnPIQCWP6XRjg2azDOfmyjUaDJeVSbCkRDqzs6WNbfhiYsTHFvjwco48wz3YC9SGDDQcVtWy
AZttcTw/X25UVck4Jz1EkwANzu/ZI60csJcGPopbyCPA811AQljOKbKQk2Zzy3hx8cdJTn2ipkZG
Kiqkn3Nop4GPBq1sgaXLUWCKy5cflq5D+3fUZWQc6HG5Jic8nunrbvdCsKjo+0WH45vPZJo9rddP
uYHO5ND2b4Oder3itFrjqu32zNq0NGe51erMMRpTkxWFe7MRwF/qdkCfAkdkhgAAAABJRU5ErkJg
gg==</leftIcon>
    </OctopusIcon>
  </OctopusIcons>
</Octopus>